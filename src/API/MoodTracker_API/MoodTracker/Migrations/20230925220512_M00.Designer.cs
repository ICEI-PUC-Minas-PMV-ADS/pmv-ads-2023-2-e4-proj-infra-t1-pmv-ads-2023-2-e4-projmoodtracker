// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoodTracker.Models;

#nullable disable

namespace MoodTracker.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230925220512_M00")]
    partial class M00
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MoodTracker.Models.Humor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Humor");
                });

            modelBuilder.Entity("MoodTracker.Models.NotaMensal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuariosUsername")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UsuariosUsername");

                    b.ToTable("NotaMensal");
                });

            modelBuilder.Entity("MoodTracker.Models.Registros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("HumorId")
                        .HasColumnType("int");

                    b.Property<string>("RegFeliz")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegTriste")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuariosUsername")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("HumorId");

                    b.HasIndex("UsuariosUsername");

                    b.ToTable("Registros");
                });

            modelBuilder.Entity("MoodTracker.Models.Usuarios", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("MoodTracker.Models.NotaMensal", b =>
                {
                    b.HasOne("MoodTracker.Models.Usuarios", "Usuarios")
                        .WithMany("NotaMensal")
                        .HasForeignKey("UsuariosUsername");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("MoodTracker.Models.Registros", b =>
                {
                    b.HasOne("MoodTracker.Models.Humor", "Humor")
                        .WithMany()
                        .HasForeignKey("HumorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoodTracker.Models.Usuarios", "Usuarios")
                        .WithMany("Registros")
                        .HasForeignKey("UsuariosUsername");

                    b.Navigation("Humor");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("MoodTracker.Models.Usuarios", b =>
                {
                    b.Navigation("NotaMensal");

                    b.Navigation("Registros");
                });
#pragma warning restore 612, 618
        }
    }
}
